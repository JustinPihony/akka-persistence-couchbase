couchbase-journal {
  # connection settings shared by write, read and snapshot
  connection {
    nodes = ["localhost"]
    # username = "admin"
    # password = "admin1"
  }

  write {
    plugin-dispatcher = "akka.actor.default-dispatcher"
    class = "akka.persistence.couchbase.CouchbaseJournal"
    bucket = "akka"

    # FIXME I wonder if we shouldn't decide this internally instead. depending on how many documents we insert?
    parallelism = 1

    # How many nodes a write is replicated to before considering the write completed.
    #
    # Valid values:
    # * none - No replication needed to consider a write done
    # * one - Write replicated to at least one replica
    # * two - Write replicated to at least two replicas
    # * three - Write replicated to at least three replicas
    replicate-to = none

    # How many nodes a write has reached disk on before it is considered complete.
    #
    # Valid values:
    # * none - Write reaching memory is enough
    # * master - Ensure the modification is stored on disk on the master node
    # * one - Ensure the modification is stored on disk on at least one node
    # * two - Ensure the modification is stored on disk on at least two nodes
    # * three- Ensure the modification is stored on disk on at least three nodes
    # * four - Ensure the modification is stored on disk on the active node and all three replicas
    persist-to = one

    # Fail a write to couchbase if it takes longer than this
    write-timeout = 15 s

    # Fail a read from couchbase if it takes longer than this
    read-timeout = 15 s
  }

  read {
    class = "akka.persistence.couchbase.CouchbaseReadJournalProvider"

    # Maximum number of documents to fetch from couchbase in one query
    page-size = 100

    events-by-tag {
      # For eventsByTag queries how long to delay the query for. For event writes that come from different nodes
      # the clocks may be out of sync meaning events aren't received in order. If the events are delivered to the
      # query immediately the offset may be greater than some delayed events. Meaning that if this offset is saved
      # for restarting the query the delayed events will never be processed.
      eventual-consistency-delay = 5s
      # Verbose debug logging for offset updates for events by tag queries. Any logging that is per event is
      # affected by this flag. Debug logging that is per query to Cassandra is enabled if DEBUG logging is enabled
      verbose-debug-logging = false
    }
    events-by-persistenceid {
    }
  }

  snapshot {
    class = "akka.persistence.couchbase.CouchbaseSnapshotStore"
    bucket = "akka"
  }

}
